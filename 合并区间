###56.合并区间
##给定二维区间数组，eg：intervals = [[1,3],[2,6],[8,10],[15,18]]，输出[[1,6],[8,10],[15,18]]，注意二位数组无序
public int[][] merge(int[][] intervals) {
  if (intervals.length == 0) return new int[0][2];
  // 按区间左侧排序，这样做，比较两个区间时，只需比较前右和后左的大小即可
  Arrays.sort(intervals, (p, q) -> p[0] - q[0]);
  List<int[]> mergerd = new ArrayList<>();
  for (int[] interval : intervals) {
    int m = mergerd.size();
    // merged.get(m - 1)[1]：上一次的右；interval[0]：当前的左
    if (m > 0 && merged.get(m - 1)[1] >= interval[0]) { // 可以合并
      merged.get(m - 1)[1] = Math.max(merged.get(m - 1)[1], interval[1]); // 更新上一次的右区间即可
    } else { // 不能合并
      merged.add(interval);
    }
  }
  return merged;
}
